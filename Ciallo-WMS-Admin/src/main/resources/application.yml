server:
  port: 9080
spring:
  application:
    name: admin-service
  config:
    import:
      - classpath:application-filter.yml
  data: ## redis 配置
    redis:
      database: 0
      host: localhost
      port: 6378
      password: redis
  datasource:
    dynamic:
      ## druid 连接池管理
      druid:
        # 初始化时建立物理连接的个数
        initial-size: 5
        # 连接池的最小空闲数量
        min-idle: 5
        # 连接池最大连接数量
        max-active: 20
        # 获取连接时最大等待时间，单位毫秒
        max-wait: 60000
        # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
        test-while-idle: true
        # 既作为检测的间隔时间又作为testWhileIdel执行的依据
        time-between-eviction-runs-millis: 60000
        # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接(配置连接在池中的最小生存时间)
        min-evictable-idle-time-millis: 30000
        # 用来检测数据库连接是否有效的sql 必须是一个查询语句(oracle中为 select 1 from dual)
        validation-query: select 1
        # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
        test-on-borrow: false
        # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
        test-on-return: false
        # 是否缓存preparedStatement, 也就是PSCache,PSCache对支持游标的数据库性能提升巨大，比如说oracle,在mysql下建议关闭。
        pool-prepared-statements: false
        # 置监控统计拦截的filters，去掉后监控界面sql无法统计，stat: 监控统计、Slf4j:日志记录、waLL: 防御sqL注入
        filters: stat,wall,slf4j
        # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
        max-pool-prepared-statement-per-connection-size: -1
        # 合并多个DruidDataSource的监控数据
        use-global-data-source-stat: true
      # 多数据源配置
      primary: public
      strict: false
      datasource:
        public:
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://localhost:5432/wms?currentSchema=public
          username: postgres
          password: 123456
          type: com.alibaba.druid.pool.DruidDataSource
        sys:
          driver-class-name: org.postgresql.Driver
          url: jdbc:postgresql://localhost:5432/wms?currentSchema=sys
          username: postgres
          password: 123456
          type: com.alibaba.druid.pool.DruidDataSource
## mybatis-plus 配置
mybatis-plus:
  # 指定mapper配置文件路径
  mapper-locations: classpath*:/mapper/**.xml
  # 指定实体包
  type-aliases-package: com.italycalibur.ciallo.wms.core.models.entity
  # 指定父类
  type-aliases-super-type: com.italycalibur.ciallo.wms.core.models.BaseEntity
  # 全局设置
  global-config:
    # 禁用打印banner
    banner: false
    # 数据库策略
    db-config:
      # 表名前缀
      table-prefix: t_, sys_
      # 主键策略
      id-type: ASSIGN_ID
## jwt 配置
jwt:
  # 密钥字符串（256位）
  secret-key: XioEqEG2bHV/AkH6s9fVTFF2BIdvMoUL
  # token有效时间（单位：毫秒）
  expire-time: 86400000
  # token前缀
  prefix: 'Bearer '
  # token头文件名
  header: Authorization
# springdoc-openapi项目配置
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    tags-sorter: alpha
    operations-sorter: alpha
  api-docs:
    path: /v3/api-docs
  group-configs:
    - group: '管理模块'
      paths-to-match: '/**'
      packages-to-scan: com.italycalibur.ciallo.wms.admin
# knife4j的增强配置，不需要增强可以不配
knife4j:
  # 开启增强配置
  enable: true
  # 开启生产环境屏蔽
  production: false
  setting:
    language: zh_cn
    swagger-model-name: 实体类列表
    enable-version: true # 是否开启界面中对某接口的版本控制,如果开启，后端变化后Ui界面会存在小蓝点
    enable-filter-multipart-apis: true # RequestMapping接口,是否开启过滤
    enable-filter-multipart-api-method-type: GET # RequestMapping只展示哪种类型
    enable-footer-custom: true # 开启自定义页脚
    footer-custom-content: <strong>MIT License | Copyright  2025 - [italycalibur2019](https://github.com/italycalibur2019)</strong>
